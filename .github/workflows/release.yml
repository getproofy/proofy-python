name: Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags like v1.0.0

env:
  FORCE_COLOR: 1

jobs:
  validate-tag:
    name: "Validate Release Tag"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      is-prerelease: ${{ steps.get-version.outputs.is-prerelease }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get-version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT

          # Check if it's a pre-release (contains alpha, beta, rc, dev)
          if [[ "$TAG" =~ (alpha|beta|rc|dev) ]]; then
            echo "is-prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is-prerelease=false" >> $GITHUB_OUTPUT
          fi

          echo "Releasing version: $TAG"
          echo "Pre-release: ${{ steps.get-version.outputs.is-prerelease }}"

  run-tests:
    name: "Run Full Test Suite"
    runs-on: ubuntu-latest
    needs: validate-tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e './proofy-commons[dev]'
          pip install -e './pytest-proofy[dev]'
          pip install ruff

      - name: Run all tests
        run: |
          echo "::group::Testing proofy-commons"
          cd proofy-commons && python -m pytest tests/ -v && cd ..
          echo "::endgroup::"

          echo "::group::Testing pytest-proofy"
          cd pytest-proofy && python -m pytest tests/ -v -p no:proofy && cd ..
          echo "::endgroup::"

      - name: Run linting
        run: |
          ruff check .
          ruff format --check .

  build-packages:
    name: "Build Packages"
    runs-on: ubuntu-latest
    needs: [validate-tag, run-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Update version in packages
        run: |
          VERSION="${{ needs.validate-tag.outputs.version }}"

          # Update proofy-commons version
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" proofy-commons/pyproject.toml

          # Update pytest-proofy version
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" pytest-proofy/pyproject.toml

          # Update pytest-proofy dependency on proofy-python
          sed -i -E "s/\"proofy-python>=[^\"]+\"/\"proofy-python>=$VERSION\"/" pytest-proofy/pyproject.toml

      - name: Build proofy-commons
        run: |
          echo "::group::Building proofy-commons"
          cd proofy-commons
          python -m build
          python -m twine check dist/*
          echo "::endgroup::"

      - name: Build pytest-proofy
        run: |
          echo "::group::Building pytest-proofy"
          cd pytest-proofy
          python -m build
          python -m twine check dist/*
          echo "::endgroup::"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: |
            proofy-commons/dist/
            pytest-proofy/dist/

  create-release:
    name: "Create GitHub Release"
    runs-on: ubuntu-latest
    needs: [validate-tag, build-packages]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for changelog

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: dist/

      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ needs.validate-tag.outputs.version }}"

          # Get previous tag for changelog
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          echo "## Changes in v$VERSION" > changelog.md
          echo "" >> changelog.md

          if [ -n "$PREV_TAG" ]; then
            echo "### Commits since $PREV_TAG:" >> changelog.md
            git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> changelog.md
          else
            echo "### All commits in this release:" >> changelog.md
            git log --pretty=format:"- %s (%h)" >> changelog.md
          fi

          echo "" >> changelog.md
          echo "### Packages in this release:" >> changelog.md
          echo "- proofy-python v$VERSION" >> changelog.md
          echo "- pytest-proofy v$VERSION" >> changelog.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.validate-tag.outputs.version }}
          name: Release v${{ needs.validate-tag.outputs.version }}
          body_path: changelog.md
          prerelease: ${{ needs.validate-tag.outputs.is-prerelease == 'true' }}
          files: |
            dist/proofy-commons/dist/*
            dist/pytest-proofy/dist/*

  publish-to-pypi:
    name: "Publish to PyPI"
    runs-on: ubuntu-latest
    needs: [validate-tag, create-release]
    if: needs.validate-tag.outputs.is-prerelease == 'false' # Only publish stable releases
    environment:
      name: pypi
      url: https://pypi.org/project/proofy-python/
    permissions:
      id-token: write # For trusted publishing
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: dist/

      - name: Publish proofy-commons to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/proofy-commons/dist/

      - name: Publish pytest-proofy to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/pytest-proofy/dist/

  publish-to-test-pypi:
    name: "Publish to Test PyPI"
    runs-on: ubuntu-latest
    needs: [validate-tag, create-release]
    if: always() # Publish all versions to Test PyPI
    environment:
      name: testpypi
      url: https://test.pypi.org/project/proofy-python/
    permissions:
      id-token: write # For trusted publishing
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: dist/

      - name: Publish proofy-commons to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/proofy-commons/dist/

      - name: Wait for proofy-python to be available
        run: |
          echo "Waiting for proofy-python to be available on Test PyPI..."
          sleep 30
          # Verify the package is available
          curl -f "https://test.pypi.org/pypi/proofy-python/json" || exit 1

      - name: Publish pytest-proofy to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/pytest-proofy/dist/
          verbose: true

  post-release:
    name: "Post Release Tasks"
    runs-on: ubuntu-latest
    needs: [validate-tag, create-release, publish-to-pypi]
    if: always() && needs.create-release.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create post-release summary
        run: |
          VERSION="${{ needs.validate-tag.outputs.version }}"
          echo "## Release v$VERSION Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **GitHub Release**: Created successfully" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.validate-tag.outputs.is-prerelease }}" == "false" ]]; then
            if [[ "${{ needs.publish-to-pypi.result }}" == "success" ]]; then
              echo "✅ **PyPI**: Published successfully" >> $GITHUB_STEP_SUMMARY
              echo "- [proofy-python v$VERSION](https://pypi.org/project/proofy-python/$VERSION/)" >> $GITHUB_STEP_SUMMARY
              echo "- [pytest-proofy v$VERSION](https://pypi.org/project/pytest-proofy/$VERSION/)" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **PyPI**: Publication failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ **Pre-release**: Published to Test PyPI only" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "pip install proofy-python==$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "pip install pytest-proofy==$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
